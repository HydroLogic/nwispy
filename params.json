{"name":"nwispy","tagline":"nwispy is a repository for code that reads, processes, plots, and allows query capability for USGS NWIS data files.","body":"nwispy\r\n======\r\n\r\nContents\r\n--------\r\n\r\n[Version](#version)\r\n\r\n[Author](#author)\r\n\r\n[Description](#description)\r\n\r\n[*nwispy* Command Line Interface](#nwispy-command-line-interface)\r\n\r\n[*nwispy* Simple UML Diagram](#nwispy-simple-uml-diagram)\r\n\r\n[Sample Images](#sample-images)\r\n\r\n[General Instructions](#general-instructions)\r\n\r\n[Testing](#testing)\r\n\r\n[Code Documentation](#code-documentation)\r\n\r\n[Requirements](#requirements)\r\n\r\n[Installation Instructions](#installation-instructions)\r\n\r\n[Repository Layout](#repository-layout)\r\n\r\n[In the Works](#in-the-works)\r\n\r\n[Disclaimer and Notice](#disclaimer-and-notice)\r\n\r\nVersion\r\n-------\r\n\r\n1.0.0\r\n\r\nAuthor\r\n------\r\n\r\n\tJeremiah Lant\r\n\tHydrologist \r\n\tU.S. Geological Survey\r\n\tKentucky Water Science Center\r\n\tLouisville, Kentucky 40299\r\n\t(502) 493-1949\r\n\tjlant@ugs.gov\r\n\t\r\nDescription\r\n-----------\r\n*nwispy* is a command line tool for analysing U.S. Geological Survey (USGS) water resource data \r\ncollected nationwide on rivers and streams by USGS gages and instruments. The National Water\r\nInformation System (NWIS) is the Nation's principal repository of water resources data.  Most NWIS\r\ndata can be accessed directly at:\r\n\r\nhttp://waterdata.usgs.gov/nwis/\r\n\r\nand for real-time data for surface water, ground water, or water-quality data:\r\n\r\nhttp://waterdata.usgs.gov/nwis/rt\r\n\r\nSome sample highlights include:\r\n\r\n* Processes USGS NWIS data files\r\n* Generates and saves plots of all parameters found in USGS NWIS data files\r\n* Retrieves and processes NWIS data files using USGS web services\r\n* Logs erroneous data found in NWIS data files \r\n* Unix friendly\r\n\r\n*nwispy* can read, process, plot, and print data and information from NWIS daily, instantaneous (real-time), \r\nand/or site data files. The NWIS data files can come from any USGS site nationwide and can contain any\r\nnumber of parameters (discharge, gage height, temperature, precipitation, sediment concentration, \r\nturbidity, depth to water level, etc.).  Time-series plots are automatically created and saved for all \r\nparameters displaying relevant statistics (mean, maximum, and minimum) with detailed axes and title descriptions.  \r\nFor sample images, please see [Sample Images](#sample-images).\r\n\r\n*nwispy* has web service capability to automatically retrieve and process NWIS data files based on a tab-delimited\r\nuser request file. Details of the USGS web services can be accessed at:\r\n\r\nhttp://waterservices.usgs.gov\r\n\r\nPlease see [General Instructions](#general-instructions) for details on *nwispy*'s web service capability.\r\n\r\n*nwispy* automatically tracks, notifies user about, and creates a log file called *warn.log* that specifies for\r\nthe user missing or erroneous data values contained in NWIS data file(s).  The *warn.log* file is only created if\r\nmissing or erroneous data values are found.  In addition, if a web service error or any other application wide \r\nerror occurs, a file called *exception.log* is created containing the details of the error.  To help solve the error\r\nthe *exception.log* can be emailed to the author.  Please see [General Instructions](#general-instructions) for details on error logging. \r\n\r\n*nwispy* is written in Python and has been built to be a \"Unix friendly\" tool, meaning it can be placed anywhere \r\nalong a Unix pipeline. *nwispy* has a help menu that lists the current command line arguments/options that can be \r\npassed to *nwispy*. At this time, users can run *nwispy* using a shell with the appropriate flags to process NWIS \r\nfiles either stored locally on a user's machine or *nwispy* can retrieve and process files from the web based on \r\na user request file.  Please see [General Instructions](#general-instructions) for details on how to use nwispy. \r\n\r\nFor full code documentation and tutorial on how to use *nwispy*, please see [Code Documentation](#code-documentation) or\r\nuse the following link:\r\n\r\nhttp://ky.water.usgs.gov/usgs/projects/jlant_program_code/nwispy/html/index.html\r\n\r\nFor upcoming developments, please see [In the Works](#in-the-works).\r\n\r\nReturn to [Contents](#contents).\r\n\r\n*nwispy* Command Line Interface\r\n-------------------------------\r\n![nwispy interface](docs/_static/nwispy-interface.png)\r\n\r\n*nwispy* Simple UML Diagram\r\n-------------------------------\r\n![nwispy uml](docs/_static/nwispy-uml-diagram.png)\r\n\r\nSample Images\r\n-------------\r\n![discharge plot](docs/_static/discharge.png)\r\n![gage height plot](docs/_static/gage-height.png)\r\n![temperature plot](docs/_static/temperature.png)\r\n![turbidity plot](docs/_static/turbidity.png)\r\n![depth plot](docs/_static/depth-to-water.png)\r\n\r\nReturn to [Contents](#contents).\r\n\r\nGeneral Instructions\r\n--------------------\r\n\r\nTo use *nwispy*, users will use a shell to execute *nwispy* with the appropriate flags to process files \r\nstored on the user's machine. To be implemented soon is a web service to NWIS. Please see *IN THE WORKS**.\r\nPlots are automatically generated and saved to an directory named *output-filename*.  An error log called\r\n*error.log* that logs any errors found in the data file, such as missing data values, is automatically \r\ngenerated and saved to the same directory that the plots are saved in.\r\n\r\n**Help -h flag**\r\n\r\nThe -h flag spawns a help menu with all the flag options.\r\n\r\n**File(s) -f flag**\r\n\r\nThe -f flag specifies a file or files to process.\r\n\r\nTo process a single NWIS data file the general syntax is:\r\n\r\n\t$ python nwispy.py -f path/to/file\r\n\t\r\nThe above commands will create an output directory with the following contents:\r\n\r\n\toutput-filename/\r\n\t\t\t\t\t*.png\t\t# plots of each parameter in the data file\r\n\t\t\t\t\t...\r\n\t\t\t\t\t*.png\r\n\r\nIf the data file processed contains any missing or erroneous data values, then a file\r\ncalled *warn.log* is created and placed in the output-filename directory for the user\r\nto review.  The *warn.log* file specifies what issues were found in the file. \r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\nFor example, using data contained in this repository's data directory:\r\n\r\n\t$ python nwispy.py -f ../data/datafiles/03290500_dv.txt\r\n\t\r\nwill produce the following output directory: \r\n\r\n\toutput-03290500_dv/\r\n\t\t\t\t\tUSGS 03290500 - Discharge, cubic feet per second (MEAN).png\t\t\r\n\r\nand\r\n\t\t\t\t\t\r\n\t$ python nwispy.py -f ../data/datafiles/03287500_dv.txt\r\n\t\r\nwill produce the following output directory: \r\n\r\n\toutput-03287500_uv/\r\n\t\t\t\t\tUSGS 03287500 - Discharge, cubic feet per second (MEAN).png\t\r\n\t\t\t\t\tUSGS 03287500 - Gage height, feet.png\t\r\n\t\t\t\t\tUSGS 03287500 - Precipitation, total, inches.png\r\n\t\t\t\t\tUSGS 03287500 - Temperature, water, degrees Celsius.png\r\n\t\t\t\t\twarn.log\r\n\t\t\t\t\t\r\nTo process a multiple NWIS data files the general command syntax is:\r\n\r\n\t$ python nwispy.py -f file1 file2 file3\r\n\r\n**File Dialog -fd flag**\r\n\r\nThe -fd flag opens a file dialog box for users to choose files: \r\n\r\n\t$ python nwispy.py -fd\r\n\t\r\nThe above command syntax will create an output directory in the same manner as the -f flag.\r\n\r\n**Plot -p flag**\r\n\r\nThe -p flag shows plots to the screen for the user to analyse and query. \r\n\r\n\t$ python nwispy.py -fd -p\r\nOR\r\n\r\n\t$ python nwispy.py -f file.txt -p\r\n\t\r\nThe above command syntax will create an output directory in the same manner as the -f flag.\r\n\r\n**Verbose -v flag**\r\n\r\nThe -v flag prints data file information, such as the type of parameters found, to the screen for the user. \r\n\r\n\t$ python nwispy.py -f file.txt -v\r\n\t\r\nThe above command syntax will create an output directory in the same manner as the -f flag.\r\n\t\r\n**Unix Friendly**\r\n\r\nUsers can place *nwispy* along a Unix pipeline.  For example, *nwispy* can accept standard input.\r\n\r\n\t$ cat file.txt | nwispy.py \r\n\r\nOR\r\n\r\n\t$ cat file.txt | nwispy.py -p -v \r\n\r\n\r\n**Web Service -web flag**\r\n\r\nThe -web flag retrieves data files through the USGS NWIS web services based upon a user created tab-delimited *requests.txt* file.  \r\n\r\n\t$ python nwispy.py -web path/to/requests-file.txt \r\n\r\n**Web Service File Dialog -webfd flag**\r\n\r\nThe -webfd flag opens a file dialog box for users to choose a tab-delimited *requests.txt* file retrieves data files through USGS NWIS\r\nweb services.  \r\n\r\n\t$ python nwispy.py -web path/to/requests-file.txt \t\r\n\r\nThe above commands will create an output directory called *requests-file-datafiles* which will contain timestamped downloaded\r\nNWIS data file(s) and an output directory for each downloaded file containing the plots of each parameter requested and a \r\n*warn.log* if erroneous data values are found.\r\n\t\r\nExample tab-delimited *requests.txt* files are shown below:\r\n\t\r\n*request_single_gage.txt*\r\n\r\n![request file plot](docs/_static/request_single_gage.png)\r\n\r\n*request_multiple_gages.txt*\r\n\r\n![request file plot](docs/_static/request_multiple_gages.png)\r\n\r\n\r\nReturn to [Contents](#contents).\r\n\r\nTesting\r\n-------\r\n\r\nUnit tests for *nwispy* were written using the nose library (https://nose.readthedocs.org/en/latest/), and \r\nare contained in the *tests* directory.  *nwispy* can be unit tested by typing the **nosetests** command at \r\nthe *nwispy* project level directory (one directory above the *tests* directory):\r\n\r\n\t$ pwd\r\n\t/your-path/nwispy\t\r\n\r\n\t$ nosetests\r\n\r\nCode Documentation\r\n------------------\r\n\r\nPlease visit the following web page for code documentation and tutorial on how to use *nwispy*:\r\n\r\nhttp://ky.water.usgs.gov/usgs/projects/jlant_program_code/nwispy/html/index.html\r\n\t\r\nRequirements\r\n------------\r\n\tpython == 2.7.6\r\n\tnumpy == 1.8.0\r\n\tmatplotlib == 1.3.1\r\n\tnose == 1.3.0\r\n\t\r\nInstallation Instructions\r\n-------------------------\r\nInstructions coming soon.\r\n\r\nReturn to [Contents](#contents).\r\n\r\nRepository Layout\r\n-----------------\r\n\r\n\tbin/\t\t\t\t\t\t# directory containing executables\r\n\tdata/\t\t\t\t\t\t# directory containing sample data files to use with software and associated information\r\n\t\tdatafiles/\t\t\t\t# directory containing sample data to use with software\r\n\t\t\t...\r\n\t\twebservice-requests/\t# directory containing sample web service request files\r\n\t\t\t...\r\n\t\tREADME.txt\t\t\t\t# file describing sample data in datafiles/\r\n\tdocs/\t\t\t\t\t\t# directory containing code documentation\r\n\t\t...\r\n\t\thtml/\t\t\t\t\t# html code documentation\r\n\t\t...\r\n\timages/\t\t\t\t\t\t# directory with sample images and screenshots\r\n\t\t...\r\n\tnwispy/\t\t\t\t\t\t# directory containing code modules\r\n\t\tnwispy.py\t\t\t\t# main controller\r\n\t\tnwispy_views.py\t\t\t# module that handles views; plotting and printing\r\n\t\tnwispy_filereader.py\t# module that handles file reading and processing\r\n\t\tnwispy_helpers.py\t\t# module that contains helper functions\r\n\t\tnwispy_webservice.py\t# module that contains web service capabilities\r\n\t\t...\r\n\ttests/\t\t\t\t\t\t# directory containing unit tests using nose library (https://nose.readthedocs.org/en/latest/)\r\n\t\t...\r\n\tMakefile\t\t\t\t\t# makefile to help clean directories\r\n\t\tLICENSE.txt\t\t\t\t# USGS Software User Rights Notice\r\n\tREADME.md\t\t\t\t\t# README file\r\n\tREQUIREMENTS.txt\t\t\t# list of requirements/dependencies \r\n\tsetup.py\t\t\t\t\t# code for building, distributing, and installing modules\r\n\r\nReturn to [Contents](#contents).\r\n\t\r\nIn the Works\r\n------------\r\n\r\n* Improvement to the *nwispygui.py* code to allow users to interact with plots using a \r\n*SpanSelector* mouse widget. A key press of 'A' or 'a' would active the slider and a key press of \r\n'Q' or 'q' de-activates the slider.\r\n\r\n\t\r\nDisclaimer and Notice\r\n---------------------\r\n\r\n\tPlease refer to the USGS Software User Rights Notice (LICENSE.txt or http://water.usgs.gov/software/help/notice/)\r\n\tfor complete use, copyright, and distribution information. The USGS provides no warranty, expressed or implied, as to the\r\n\tcorrectness of the furnished software or the suitability for any purpose. The software has been tested, but as with any\r\n\tcomplex software, there could be undetected errors. Users who find errors are requested to report them to the USGS.\r\n\r\n\tReferences to non-USGS products, trade names, and (or) services are provided for information purposes only and do not\r\n\tconstitute endorsement or warranty, express or implied, by the USGS, U.S. Department of Interior, or U.S. Government, as to\r\n\ttheir suitability, content, usefulness, functioning, completeness, or accuracy.\r\n\r\n\tAlthough this program has been used by the USGS, no warranty, expressed or implied, is made by the USGS or the United\r\n\tStates Government as to the accuracy and functioning of the program and related program material nor shall the fact of\r\n\tdistribution constitute any such warranty, and no responsibility is assumed by the USGS in connection therewith.\r\n\r\nReturn to [Contents](#contents).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}